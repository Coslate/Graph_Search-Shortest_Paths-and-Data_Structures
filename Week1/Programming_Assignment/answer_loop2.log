-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[3] = [3, 2, 4]
size = 3
----------------
scc[1] = [1, 5, 6]
size = 3
----------------
scc[7] = [9, 8, 7]
size = 3
----------------
All size of the SCC in descending order(max 5) : 3,3,3
input_edge_list.size() = 11
-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[5] = [8, 5, 2]
size = 3
----------------
scc[9] = [9, 3, 6]
size = 3
----------------
scc[7] = [4, 7, 1]
size = 3
----------------
All size of the SCC in descending order(max 5) : 3,3,3
input_edge_list.size() = 11
-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[7] = [6, 7, 8]
size = 3
----------------
scc[2] = [2, 1, 3]
size = 3
----------------
scc[5] = [5, 4]
size = 2
----------------
All size of the SCC in descending order(max 5) : 3,3,2
input_edge_list.size() = 14
-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[4] = [4]
size = 1
----------------
scc[5] = [5]
size = 1
----------------
scc[6] = [6, 8, 7]
size = 3
----------------
scc[3] = [2, 1, 3]
size = 3
----------------
All size of the SCC in descending order(max 5) : 3,3,1,1
input_edge_list.size() = 9
-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[5] = [5]
size = 1
----------------
scc[6] = [6, 8, 7, 3, 4, 2, 1]
size = 7
----------------
All size of the SCC in descending order(max 5) : 7,1
input_edge_list.size() = 11
-----------1st-------------
Use 'DFSLoop2' subroutine...
-----------2nd-------------
Use 'DFSLoop2' subroutine...
scc[5] = [4, 5, 2]
size = 3
----------------
scc[1] = [1]
size = 1
----------------
scc[6] = [6, 3]
size = 2
----------------
scc[12] = [11, 7, 12, 10, 8, 9]
size = 6
----------------
All size of the SCC in descending order(max 5) : 6,3,2,1
input_edge_list.size() = 20
